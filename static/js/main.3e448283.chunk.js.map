{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","sortField","setSortField","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","length","name","localeCompare","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAsBKA,E,0EAhBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAMGD,K,YAAAA,E,gBAAAA,E,YAAAA,M,KA2CE,IAAME,EAAM,WACjB,MAAkCC,mBAASH,EAASI,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAlCR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,UAAWE,EACb,EADaA,WAETI,EAAa,YAAOD,GAuBxB,OArBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKL,EAASe,OAEZ,OAAOF,EAAME,OAASD,EAAMC,OAE9B,KAAKf,EAASgB,KAEZ,OAAOH,EAAMI,cAAcH,GAE7B,QACE,OAAO,MAKXP,IACFI,EAAgBA,EAAcO,WAGzBP,EAOcQ,CAAiBlB,EACpC,CAAEI,YAAWE,eAEf,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPf,EAAaN,EAASgB,OAExBM,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WA9DY,SA8DAlB,IANhB,iCAYA,wBACEgB,QAAS,kBAAMf,EAAaN,EAASe,SACrCO,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAvEc,WAuEFlB,IAJhB,4BAUA,wBACEgB,QAAS,WACPb,GAAeD,IAEjBe,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAA2B,IAAfhB,IANhB,sBAYiB,KAAfF,IAAqC,IAAfE,IACtB,wBACEc,QAAS,WACPf,EAAaN,EAASI,SACtBI,GAAc,IAEhBc,KAAK,SACLF,UAAU,4BANZ,sBAaJ,oBAAIA,UAAU,WAAd,SACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAEEL,UAAU,WACV,UAAQ,OAHV,SAKGK,GAJIA,YC3HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3e448283.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nenum SortType {\n  name = 'name',\n  length = 'length',\n  default = '',\n}\n\ntype Sort = {\n  sortField: SortType,\n  isReversed: boolean,\n};\n\ntype Good = string;\n\nfunction getPreparedGoods(\n  goods: Good[],\n  { sortField, isReversed }: Sort,\n) {\n  let preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.length:\n\n          return good1.length - good2.length;\n\n        case SortType.name:\n\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(SortType.default);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SortType.name);\n          }}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_NAME,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.length)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': isReversed === false,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== ('') || isReversed === true) && (\n          <button\n            onClick={() => {\n              setSortField(SortType.default);\n              setIsReversed(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul className=\"GoodList\">\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            className=\"GoodCard\"\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// import React from 'react';\n// import 'bulma/css/bulma.css';\n// import './App.scss';\n\n// export const goodsFromServer = [\n//   'Dumplings',\n//   'Carrot',\n//   'Eggs',\n//   'Ice cream',\n//   'Apple',\n//   'Bread',\n//   'Fish',\n//   'Honey',\n//   'Jam',\n//   'Garlic',\n// ];\n\n// export const App: React.FC = () => {\n//   return (\n//     <div className=\"section content\">\n//       <div className=\"buttons\">\n//         <button\n//           type=\"button\"\n//           className=\"button is-info is-light\"\n//         >\n//           Sort alphabetically\n//         </button>\n\n//         <button\n//           type=\"button\"\n//           className=\"button is-success is-light\"\n//         >\n//           Sort by length\n//         </button>\n\n//         <button\n//           type=\"button\"\n//           className=\"button is-warning is-light\"\n//         >\n//           Reverse\n//         </button>\n\n//         <button\n//           type=\"button\"\n//           className=\"button is-danger is-light\"\n//         >\n//           Reset\n//         </button>\n//       </div>\n\n//       <ul>\n//         <ul>\n//           <li data-cy=\"Good\">Dumplings</li>\n//           <li data-cy=\"Good\">Carrot</li>\n//           <li data-cy=\"Good\">Eggs</li>\n//           <li data-cy=\"Good\">Ice cream</li>\n//           <li data-cy=\"Good\">Apple</li>\n//           <li data-cy=\"Good\">...</li>\n//         </ul>\n//       </ul>\n//     </div>\n//   );\n// };\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}